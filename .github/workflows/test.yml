name: Test
on:
  pull_request:
  push:
    branches:
      - main
      - "releases/*"

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
      - run: npm ci

      - run: npm run lint
      - run: npm run build

      - run: git diff -aw --exit-code dist/index.js

  test-single:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        ndk-version: [r21e, r25c]
        local-cache: [true, false]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        id: install-ndk
        with:
          ndk-version: ${{ matrix.ndk-version }}
          local-cache: ${{ matrix.local-cache }}
          link-to-sdk: true

      - run: ndk-build --version
      - run: ${{ steps.install-ndk.outputs.ndk-path }}/ndk-build --version

      - run: $ANDROID_HOME/ndk/${{ steps.install-ndk.outputs.ndk-full-version }}/ndk-build --version
        if: matrix.os != 'windows-latest'
      - run: "& $Env:ANDROID_HOME/ndk/${{ steps.install-ndk.outputs.ndk-full-version }}/ndk-build --version"
        if: matrix.os == 'windows-latest'

  test-multiple:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        local-cache: [true, false]

    steps:
      - uses: actions/checkout@v4
      - uses: ./
        id: install-ndk-21
        with:
          ndk-version: r21e
          add-to-path: false
          local-cache: ${{ matrix.local-cache }}
      - uses: ./
        id: install-ndk-25
        with:
          ndk-version: r25c
          add-to-path: false
          local-cache: ${{ matrix.local-cache }}

      - run: "! which ndk-build"
      - run: ${{ steps.install-ndk-21.outputs.ndk-path }}/ndk-build --version
      - run: ${{ steps.install-ndk-25.outputs.ndk-path }}/ndk-build --version
